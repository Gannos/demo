services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - demo-network
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - demo-network

  db:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
      start_period: 5s

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Mount Nginx config
    networks:
      - demo-network

volumes:
  postgres_data:

networks:
  demo-network:
